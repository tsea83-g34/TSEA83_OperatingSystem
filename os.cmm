/*
TSEA83 PROJECT OS

Basic os and terminal program for TSEA83 Computer design course at
Link√∂pings Universitet written in the propriotary C-based language C--.
*/

#include std_lib/std_lib.cmm
#include std_lib/keyboard.cmm
#include std_lib/string.cmm
#include user_programs/user_programs.cmm

int main() {
    
    // Setup buffer
    char input_buffer[40];
    int  index;

    // Init keyboard
    int keyboard;

    // Buffer decoding variable
    int buildning_buffer;
    
    // Program names buffer
    char* programs_buff;
    int program_index;

    // Program searching variable
    int searching;

    // String lenght variable
    int length;

    while(1) {
        // =========== Decode input ===========
        index = 0;
        keyboard = 0;
        buildning_buffer = 1;

        //Empty buffer
        int i = 0;
        while (i < 40) {
            input_buffer[i] = 0;
        }
        
        // Keyboard read loop
        while(buildning_buffer) {
            keyboard = read_char();

            // New input
            if (keyboard != 0) {
                // Enter, decode the buffer
                if (keyboard == '\n') {
                    input_buffer[index] = '\0';
                    buildning_buffer = 0;
                }
                else {
                    input_buffer[index] = keyboard;
                    index = index + 1;
                }
            }

            // Print input buffer to top line of screen
            clear();
            print_c('>');
            print(input_buffer);
        }

        // Clear screen for user program
        clear();

        // =========== Find program index ===========
        // Copy pointer to user program files buffer
        programs_buff = USER_PROGRAMS;

        program_index = 0;
        searching = 1;

        while((program_index < USER_PROGRAM_COUNT) & searching) {

            // Input matched program name
            if (!string_compare(input_buffer programs_buff)) {
                searching = 0;
            }
            // Countinue to next string
            else {
                length = string_length(programs_buff);
                programs_buff = programs_buff + length;
                program_index = program_index + 1;
            }
        }

        // =========== Call function ===========
        // Found program
        if (program_index != USER_PROGRAM_COUNT) {
            call_user_program(program_index);
        }
    }
}