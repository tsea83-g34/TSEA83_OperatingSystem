/*
C-- STANDARD LIB KEYBOARD

Requires:
 - STD_LIB
 - SHIFT
*/

/*  READ KEYBOARD - Read the next value from the keyboard
    
    Args:

    Returns:
     long - Keyboard value (if new!)
*/

long read_keyboard() {
    long kbv = in(0);

    // Mask of the 12th bit, denoting a new value
    long new_masked = 0x1000 & kbv;

    // Mask of the 11th bit, denoting a MAKE
    long make_masked = 0x0800 & kbv;

    // Value is both new and a MAKE
    // Shift one down to align with second mask
    if (right_shift_l(new_masked 1) & make_masked){
        // SIGN EXTEND? 
        return kbv;
    }
    //else return 0
}

/*  READ CHAR - Read the next character from the keyboard
    
    Args:

    Returns:
     char - Keyboard decoded char (if new!)
*/

char read_char() {
    long kbv = in(0);

    // Mask of the 12th bit, denoting a new value
    long new_masked = 0x1000 & kbv;

    // Mask of the 11th bit, denoting a MAKE
    long make_masked = 0x0800 & kbv;

    // Shift one down to align with second mask
    long shifted = right_shift_l(new_masked 1);

    int i = 0;

    // Value is both new and a MAKE
    if (shifted & make_masked){
        // SIGN EXTEND? 
        return 0x000000FF & kbv;
    }
    //else return 0
}